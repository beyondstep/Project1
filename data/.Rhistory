ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")
ReactivesecondCanada = Reactivesecond%>%filter(., Country == "Canada")
ReactivesecondFrance = Reactivesecond%>%filter(., Country == "France")
ReactivesecondUK = Reactivesecond%>%(., Country == "United Kingdom")
ReactivesecondUK = Reactivesecond%>%filter(.,Country == "United Kingdom")
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")
ReactivesecondCanada = Reactivesecond%>%filter(., Country == "Canada")
ReactivesecondFrance = Reactivesecond%>%filter(., Country == "France")
ReactivesecondUK = Reactivesecond%>%filter(.,Country == "United Kingdom")
ReactivesecondGermany = Reactivesecond%>%filter(., Country == "Germany")
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews)) + geom_bar(stat = "identity") + coord_polar()
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews)) + geom_bar(aes(fill = VideoCategories), stat = "identity") + coord_polar()
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews)) + geom_bar(aes(fill = VideoCategories), width = 1 stat = "identity") + coord_polar()
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews)) + geom_bar(aes(fill = VideoCategories), width = 1, stat = "identity") + coord_polar()
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews)) + geom_bar(aes(fill = VideoCategories), width = 1, stat = "identity") + coord_polar('x')
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews, fill = VideoCategories)) + geom_bar(width = 1, stat = "identity") + coord_polar('x')
ggplot(ReactivesecondUSA, aes(x=VideoCategories, y = TotalViews, fill = VideoCategories)) +
geom_bar(width = 1, size = 1, color = "white", stat = "identity") +
coord_polar(VideoCategories) +
geom_text(aes(label = paste0(round(share), "%")),
position = position_stack(vjust = 0.5)) +
labs(x = NULL, y = NULL, fill = NULL,
title = "market share") +
guides(fill = guide_legend(reverse = TRUE)) +
scale_fill_manual(values = c("#ffd700", "#bcbcbc", "#ffa500", "#254290")) +
theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, color = "#666666"))
View(Reactivesecond)
Reactivesecond = FirstgraphR1%>%group_by(., Country, VideoCategories)%>%
summarise(., TotalViews = TotalViews/sum(as.numeric(NumOfViews)))
Reactivesecond = FirstgraphR1%>%group_by(., Country, VideoCategories)%>%
summarise(., TotalViews = NumOfViews/sum(as.numeric(NumOfViews)))
Reactivesecond = FirstgraphR1%>%group_by(., Country, VideoCategories)%>%
summarise(., TotalViews = NumOfViews/sum(as.numeric(NumOfViews)))
Reactivesecond = FirstgraphR1%>%group_by(., Country, VideoCategories)%>%
summarise(., TotalViews = sum(as.numeric(NumOfViews)))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = TotalViews/sum(Totalviews))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = TotalViews/sum(TotalViews))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., TotalViews/sum(TotalViews))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., TotalViews/sum(TotalViews))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = as.numeric(TotalViews/sum(TotalViews)))
TotalUSAviews = sum(ReactivesecondUSA$TotalViews)
sum(ReactivesecondUSA$TotalViews)
x = sum(ReactivesecondUSA$TotalViews)
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = as.numeric(TotalViews/x)*100))
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = as.numeric(TotalViews/x)*100)
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")%>%
summarise(., Percentage = (TotalViews/x)*100)
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")
ReactivesecondCanada = Reactivesecond%>%filter(., Country == "Canada")
ReactivesecondFrance = Reactivesecond%>%filter(., Country == "France")
ReactivesecondUK = Reactivesecond%>%filter(.,Country == "United Kingdom")
ReactivesecondGermany = Reactivesecond%>%filter(., Country == "Germany")
ggplot(ReactivesecondUSA, aes(x =TotalViews, y=VideoCategories,fill=VideoCategories) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "y")
ggplot(ReactivesecondUSA, aes(x =TotalViews, y=VideoCategories,fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "y")
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews,fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "y")
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")+them_no_axes() +cood_fixed()
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")+theme_no_axes() +cood_fixed()
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")+theme_no_axes() +cood_fixed())
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")+coord_fixed()
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_fixed()
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_fixed('x')
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_arc_bar(width = 1,stat="identity")+coord_polar(theta = "x")
ggplot(ReactivesecondUSA, aes(x =VideoCategories, y= TotalViews, fill=VideoCategories)) + geom_bar(width = 1,stat="identity")+coord_polar(theta = "x")
ReactivesecondUSA
View(ReactivesecondUSA)
pie(ReactivessecondUSA$TotalViews, labels = ReactivesecondUSA$VideoCategories, main = "USA")
pie(ReactivessecondUSA$TotalViews, labels = ReactivessecondUSA$VideoCategories, main = "USA")
pie(ReactivesecondUSA$TotalViews, labels = ReactivesecondUSA$VideoCategories, main = "USA")
ggThemeAssist:::ggThemeAssistAddin()
PieUSA = pie(ReactivesecondUSA$TotalViews, labels = ReactivesecondUSA$VideoCategories, main = "USA Video Trend")
PieCanada = pie(ReactivesecondCanada$TotalViews, labels = ReactivesecondCanada$VideoCategories, main = "Canada Video Trend")
PieFrance = pie(ReactivesecondFrance$TotalViews, labels = ReactivesecondFrance$VideoCategories, main = "France Video Trend")
PieUK = pie(ReactivesecondUK$TotalViews, labels = ReactivesecondUK$VideoCategories, main = "UK Video Trend")
View(ReactivesecondUK)
ReactivesecondUK = Reactivesecond%>%filter(.,Country == "United Kingdom")
View(ReactivesecondUK)
View(Reactivesecond)
ReactivesecondUK = Reactivesecond%>%filter(.,Country == "Great Britain")
View(ReactivesecondUK)
PieUK = pie(ReactivesecondUK$TotalViews, labels = ReactivesecondUK$VideoCategories, main = "UK Video Trend")
PieGermany = pie(ReactivesecondGermany$TotalViews, labels = ReactivesecondGermany$VideoCategories, main = "Germany Video Trend")
runApp('ShinyProject')
ggThemeAssist:::ggThemeAssistAddin()
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
View(Reactivesecond)
ReactivesecondCanada
View(ReactivesecondUSA)
list(Reactivesecond$VideoCategories)
list(Reactivesecond$Countries)
list(Reactivesecond$Country)
View(ReactivesecondUK)
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
View(Reactivefirst)
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
getwd()
write.csv("Reactivefirst.csv")
write.csv(Reactivefirst, file = "Reactivefirst.csv")
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
library('dplyr')
rm(list = ls())
View(data)
Knicks$season = as.factor(Knicks$season)
Knicks$winrate = ifelse(Knicks$win == "W", 1, 0)
Knicks = data
Knicks$season = as.factor(Knicks$season)
Knicks$winrate = ifelse(Knicks$win == "W", 1, 0)
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
library('plyr')
detach(package:plyr)
library('dplyr')
View(data)
Knicks = data
Knicks$season = as.factor(Knicks$season)
Knicks$winrate = ifelse(Knicks$win == "W", 1, 0)
Knicks
Knicks%>%summarise(., winratio = sum(winrate))%>%
group_by(., season)%>%
select(., season, winratio)
source('C:/Users/Bird_/Desktop/Rstudio/project.R', echo=TRUE)
Reactivefirst = read.csv("Reactivefirst.csv", stringsAsFactors = FALSE)
runApp('ShinyProject')
runApp('ShinyProject')
View(TopViewCountry)
TopViewCountry = read.csv("TopViewCountry", stringsAsFactors = FALSE)
getwd()
Top3List11 = read.csv("Top3list.csv")
gvisGeoChart(Top3List11, locationvar = "Country", hovervar = "Title1")
runApp('ShinyProject')
runApp('ShinyProject')
library(DT)
library(shiny)
library(googleVis)
library(ggplot2)
library(ggthemes)
shinyServer(function(input, output)({
output$Reactivefirst <- renderPlot({
args%>%switch(input$Reactivefirst,
"Likes" = Reactivetfirst$TotalLikes,
"DisLikes" = Reactivefirst$TotalDislikes,
"Views" = Reactivefirst$TotalViews,
"Monetization" = Reactivefirst$TotalMonetization)
do.call(Reactivefirst, args)
})
# show map using googleVis
output$Summary <- renderGvis({
gvisGeoChart(Top3List11,
locationvar = "Country",
hovervar = "Title1",
options = list(backgroundColor= "midnightblue", width = 1500, height = 600))
})
# show histogram using googleVis
output$VideoCategories <- renderPlot({
ggplot(data = VideoCategories, aes(x = TotalLikes, y = TotalDis))+geom_point(aes(size = TotalViews, color = VideoCategories)) +
theme(plot.subtitle = element_text(vjust = 1),
plot.caption = element_text(vjust = 1),
axis.line = element_line(colour = "antiquewhite",
linetype = "solid"), panel.grid.major = element_line(colour = "cornsilk2"),
panel.grid.minor = element_line(colour = "ghostwhite"),
axis.title = element_text(size = 17),
axis.text.x = element_text(family = "serif",
size = 12, colour = "white"), axis.text.y = element_text(family = "serif",
size = 11, colour = "darkgoldenrod1"),
plot.title = element_text(family = "Roboto Condensed",
size = 18, colour = "coral1"), panel.background = element_rect(fill = "lightblue2",
colour = "cornflowerblue", size = 2.1,
linetype = "solid"), plot.background = element_rect(fill = "gray4",
size = 2.9, linetype = "solid"),
legend.position = "top", legend.direction = "horizontal") +labs(title = "Categorical Summary") + theme(plot.title = element_text(family = ),
legend.background = element_rect(fill = "darksalmon"),
legend.position = "none") + theme(axis.text.x = element_text(size = 13),
legend.position = "top") +labs(y = "TotalDislikes") + theme(plot.title = element_text(family = ))
})
plotOutput("VideoCategories", width = 700, height = 500)
# show data using DataTable
output$table <- DT::renderDataTable({
})
# show statistics using infoBox
output$SumBox <- renderInfoBox({
Total_value <- format(sum(RegionSummary$TotalViews), big.mark = ",")
Total_valuename <- "Total Number Of Views"
infoBox(Total_valuename, Total_value, icon = icon("hand-o-up"), fill = T, color = "black")
})
output$SumBox2 <- renderInfoBox({
Total_Monetize <- format(sum(RegionSummary$TotalMonetize), big.mark = ",")
Total_Monetizename <- "Total Dollar($)"
infoBox(Total_Monetizename, Total_Monetize, icon = icon("hand-o-down"), fill = T, color = "navy")
})
output$SumBox3 <- renderInfoBox({
Interaction_rate <- format(sum(RegionSummary$TotalLikes), big.mark = ",")
Total_Likes <- "Total Number Of Likes"
infoBox(Total_Likes, Interaction_rate, icon = icon("hand-o-down"), fill = T, color = "yellow")
})
output$SumBox4 <- renderInfoBox({
TotalUniqueTrendvideos <- format(nrow(RmDuplicate), big.mark = ",")
Total_Unique <- "Unique Trend Videos"
infoBox(Total_Unique, TotalUniqueTrendvideos, icon = icon("hand-o-down"), fill = T, color = "red")
})}))
library(DT)
library(shiny)
library(shinydashboard)
library(ggplot2)
shinyUI(dashboardPage(
skin = 'red',
dashboardHeader(title = "Nov 2017 - June 2018"),
dashboardSidebar(
width = 250,
sidebarUserPanel("Youtube Trend Videos ", image = "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e1/Logo_of_YouTube_%282015-2017%29.svg/1280px-Logo_of_YouTube_%282015-2017%29.svg.png"),
sidebarMenu(
menuItem("Summary Of Data", tabName = "Summary", icon = icon("list-alt")),
menuItem("Regions", tabName = "Regions", icon = icon("glyphicon-play")),
menuItem("VideoCategories", tabName = "VideoCategories", icon = icon("glyphicon-backward")),
menuItem("Countries Comparison", tabName = "Countries", icon = icon("list-alt")),
selectizeInput("selected",
"Select Item to Display",
choice)
)),
dashboardBody(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
tabItems(
tabItem(tabName = "Summary",
fluidRow(infoBoxOutput("SumBox"),
infoBoxOutput("SumBox2"),
infoBoxOutput("SumBox3"),
infoBoxOutput("SumBox4")),
fluidRow(box(htmlOutput("Summary"), height = 700, width = 1500))),
tabItem(tabName = "VideoCategories",
fluidRow(box(plotOutput("VideoCategories"), height = 600, width = 1100))),
tabItem(tabName = "Countries",
fluidPage(
shinyUI(fluidPage(
titlePanel("Countries Comparison"), # main title
sidebarLayout(
sidebarPanel(
helpText("Choose Two Countries"), ## subtitle
selectInput("ReactivesecondUSA", # choose the residents
label = "Choose a variable to display",
choices = Reactivefirst$Country,
selected = "USA"),
selectInput("ReactivesecondUSA", # choose the residents
label = "Choose a variable to display",
choices = Reactivefirst$Country,
selected = "Canada"),
sliderInput("range", # choose the range
label = "Range of interest:",
min = 0, max = 100, value = c(0, 100))
),
mainPanel(plotOutput("map"))
)
))
))
)
)
))
runApp('ShinyProject')
runApp('ShinyProject')
runApp('ShinyProject')
VideoCategories = read.csv('VideoCategories.csv', stringsAsFactors = FALSE)
RegionSummary = read.csv('RegionsSummary.csv', stringsAsFactors = FALSE)
gvisGauge(RegionSummary,
options=list(min=0, max=500000000, greenFrom=350000000,
greenTo=500000000, yellowFrom=100000000, yellowTo=350000000,
redFrom=0, redTo=350000000, width=400, height=300))
RegionSummary = RegionSummary%>%select(., -X)
View(RegionSummary)
ggplot(data = VideoCategories, aes(x = TotalLikes, y = TotalDis))+geom_point(aes(size = TotalViews, color = VideoCategories)) + theme(plot.subtitle = element_text(vjust = 1),
plot.caption = element_text(vjust = 1),
axis.line = element_line(colour = "antiquewhite",
linetype = "solid"), panel.grid.major = element_line(colour = "cornsilk2"),
panel.grid.minor = element_line(colour = "ghostwhite"),
axis.title = element_text(size = 17),
axis.text.x = element_text(family = "serif",
size = 12, colour = "white"), axis.text.y = element_text(family = "serif",
size = 11, colour = "darkgoldenrod1"),
plot.title = element_text(family = "Roboto Condensed",
size = 18, colour = "coral1"), panel.background = element_rect(fill = "lightblue2",
colour = "cornflowerblue", size = 2.1,
linetype = "solid"), plot.background = element_rect(fill = "gray4",
size = 2.9, linetype = "solid"),
legend.position = "top", legend.direction = "horizontal") +labs(title = "Categorical Summary") + theme(plot.title = element_text(family = ),
legend.background = element_rect(fill = "darksalmon"),
legend.position = "none") + theme(axis.text.x = element_text(size = 13),
legend.position = "top") +labs(y = "TotalDislikes") + theme(plot.title = element_text(family = ))
runApp('ShinyProject')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
LatestRecord = read.csv("Latest Record.csv", stringsAsFactors = FALSE)
LatestRecord = read.csv("Latestrecord.csv", stringsAsFactors = TRUE)
View(LatestRecord)
runApp('ShinyProjectFinal')
View(Reactivefirst)
Reactivefirst = Reactivefirst%>%select(-x)
Reactivefirst = Reactivefirst%>%select(., -X)
View(Reactivefirst)
getwd()
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
ggplot(data = Reactivefirst, aes(x = Country, y = TotalLikes)) + geom_bar(aes(fill = "Country"), stat = "identity")
ggplot(data = Reactivefirst, aes(x = Country, y = TotalLikes)) + geom_bar(aes(fill = Country), stat = "identity")
experiment = ggplot(data = Reactivefirst, aes(x = Country, y = TotalLikes)) + geom_bar(aes(fill = Country), stat = "identity")
runApp('ShinyProject')
runApp('ShinyProjectFinal')
shiny::runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
PieUSA = pie(ReactivesecondUSA$TotalViews, labels = ReactivesecondUSA$VideoCategories, main = "USA Video Trend")
ReactivesecondUSA = Reactivesecond%>%filter(., Country == "USA")
Reactivesecond = FirstgraphR1%>%group_by(., Country, VideoCategories)%>%
summarise(., TotalViews = sum(as.numeric(NumOfViews)))
ggplot(data = Reactivefirst, aes(x = Country, y = TotalLikes)) + geom_bar(aes(fill = Country), stat = "identity")
ggplot(data = Reactivefirst, aes(x = Country, y = TotalDislikes)) + geom_bar(aes(fill = Country), stat = "identity")
ggplot(data = Reactivefirst, aes(x = Country, y = TotalViews)) + geom_bar(aes(fill = Country), stat = "identity")
ggplot(data = Reactivefirst, aes(x = Country, y = TotalComments)) + geom_bar(aes(fill = Country), stat = "identity")
ggplot(data = Reactivefirst, aes(x = Country, y = TotalMonetization)) + geom_bar(aes(fill = Country), stat = "identity")
library(ggplot2)
data(cars)
data(cars)
plot(cars$speed,cars$dist)
plot(cars$speed,cars$dist)
ggplot(data = cars , aes(x = speed, y=dist))+
geom_point(col="red",pch = 17)+
xlab("Speed (mpg)")+
ylab("Stopping Distance (ft)")+
ggtitle("Relationship between Speed and Stopping Distance ")
# Question 2
data(faithful)
# 2.1
faithful$length = ifelse(faithful$eruptions < 3.2,
"short", "long")
class(faithful$length)
# 2.3
ggplot(faithful, aes(x = waiting))+
geom_density(aes(color = length))
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
knicks <- tbl_df(data)
ggplot(knicks1, aes(x=season, y=ratio)) + geom_bar(stat="identity")
# 3.3
ggplot(knicks,aes(x=points)) +
geom_histogram()+
facet_wrap(~season)
ggplot(knicks3,aes(x=diff, y=ratio)) +
geom_point(color='red4',size=4)+
geom_hline(yintercept=0.5,colour='grey20',size=0.5,linetype=2)+
geom_vline(xintercept=0,colour='grey20',size=0.5,linetype=2)+
geom_text(aes(x=diff,y=ratio,label=opponent),
hjust=0.7, vjust=1.4,angle = -30)+
theme_bw()
# Question 3
library(dplyr)
load(url('https://s3.amazonaws.com/graderdata/Knicks.rda'))
knicks <- tbl_df(data)
# 3.1
knicks1 <- group_by(knicks, season) %>%
summarise(ratio=sum(win=="W")/n())
ggplot(knicks1, aes(x=season, y=ratio)) + geom_bar(stat="identity")
# 3.2
knicks2 <- group_by(knicks, season, visiting) %>%
summarise(ratio=sum(win=="W")/n())
ggplot(knicks2, aes(x=season,y=ratio)) +
geom_bar(aes(fill=visiting), stat='identity',position='dodge')
Views(knicks2)
view(knicks2)
View(knicks2)
View(Reactivefirst)
View(FirstgraphR)
view(LatestRecord)
View(LatestRecord)
LatestRecord = LatestRecord%>%select(., -c(X, X1))
View(LatestRecord)
LatestRecord = LatestRecord%>%select(., -c(X, X.1))
View(LatestRecord)
View(LatestRecord)
library(tidyr)
spread(Reactivefirst)
Reactivefirst2 = spread(Reactivefirst, Country)
View(Reactivefirst)
LatestRecord2 = LatestRecord%>%group_by(., VideoCategories,Country)%>%
summarise(., Total = sum())
View(LatestRecord2)
LatestRecord2 = LatestRecord%>%group_by(., VideoCategories,Country)%>%
summarise(., Total = sum(*))
View(Reactivefirst)
Reactivefirst3 = Reactivefirst%>%gather(., TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactivefirst%>%gather(key = Country, value = TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(., Country, value)
Reactivefirst3 = Reactivefirst%>%gather(TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(., Country)
Reactivefirst3 = Reactivefirst%>%gather(TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(Country)
Reactivefirst3 = Reactivefirst%>%gather(key = Country, value = TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(Country)
Reactivefirst3 = Reactivefirst%>%gather(Country,TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactivefirst%>%gather(Country,TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(Country)
Reactivefirst3 = Reactivefirst%>%gather(TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)%>%
spread(Country)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(x = TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(x = TotalLikes, y = TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(LatestRecord)
View(Reactivefirst3)
View(Reactivefirst)
View(Reactivefirst)
x =(1,2,3,4,5)
y =(5,4,3,2,1)
x =1,2,3,4,5
x =c(1,2,3,4,5)
y =c(5,4,3,2,1)
Reactive4 = cbind(LatestRecord, x, y)
View(Reactive4)
Reactive4 = cbind(Reactivefirst, x, y)
View(Reactive4)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(x, yTotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
Reactivefirst3 = Reactivefirst%>%group_by(., Country)%>%
gather(x, y, TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
Reactivefirst3 = Reactive4%>%group_by(., Country)%>%
gather(x, y, TotalLikes, TotalDislikes, TotalViews, TotalComments, TotalMonetization)
View(Reactive3)
View(Reactivefirst3)
Reactive5 = Reactivefirst3%>%rename(., "Category" = x, "Total" = y)
View(Reactive5)
ggplot(data = Reactive5, aes(x = Category, y = Total)) +
geom_bar(aes(fill = Country), stat = "identity", position = "dodge")
Reactivefirst3 = Reactive4%>%group_by(., Country)%>%
gather(x, y, TotalLikes, TotalDislikes, TotalComments, TotalMonetization)
ggplot(data = Reactive5, aes(x = Category, y = Total)) +
geom_bar(aes(fill = Country), stat = "identity", position = "dodge")
View(Reactivefirst3)
Reactivefirst3 = Reactive4%>%group_by(., Country)%>%
gather(x, y, TotalLikes, TotalDislikes, TotalComments, TotalMonetization)
View(Reactivefirst3)
Reactivefirst3 = Reactive4%>%group_by(., Country)%>%
gather(x, y, TotalLikes, TotalDislikes, TotalComments, TotalMonetization)%>%
select(., -TotalViews)
View(Reactivefirst3)
Reactive5 = Reactivefirst3%>%rename(., "Category" = x, "Total" = y)
ggplot(data = Reactive5, aes(x = Category, y = Total)) +
geom_bar(aes(fill = Country), stat = "identity", position = "dodge")
Reactive
View(Reactive)
View(Reactivefirst)
Reactive6 = View(Reactivefirst)%>%select(., Country, TotalViews)
Reactive6 = Reactivefirst%>%select(., Country, TotalViews)
runApp('ShinyProjectFinal')
View(Rawdata)
View(Rawdata)
Rawdata = Reactivefirst3%>%rename(., "Category" = x, "Total" = y)
View(Rawdata)
runApp('ShinyProjectFinal')
runApp('ShinyProjectFinal')
getwd()
write.csv(Rawdata, file = "Rawdata.csv")
setwd("./data/")
Rawdata = read.csv("Rawdata.csv", stringsAsFactors = FALSE)
getwd()
setwd("./ShinyProjectFinal")
setwd("./data/")
Rawdata = read.csv("Rawdata.csv", stringsAsFactors = FALSE)
runApp('C:/Users/Bird_/Desktop/Rstudio/ShinyProjectFinal')
